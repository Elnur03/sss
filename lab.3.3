/*Колода карт состоит из 36 листов. Колода перемешивается, а затем раздается полностью двум  
игрокам: 1-ая карта – 1-ому игроку, 2-ая карта – 2-ому игроку, 3-ая карта – 1-ому игроку, 
4-ая карта – 2-ому игроку и т. д. Напишите программу, используя объектно-ориентированную 
методологию, которая создает объект колода, выводит колоду на экран, перемешивает колоду, 
вновь выводит ее на экран. Далее создает объекты игроков, раздает карты колоды игрокам. 
При раздаче карты добавляются в конец последовательности, для этого выполняется проход от 
начала до конца последовательности и только затем добавляется очередная карта. Раздав все карты, 
программа выводит на экран последовательности карт каждого игрока. Затем выполняются три раунда 
игры, во время каждого раунда игроки кладут по одной карте (первой в их последовательности) 
на стол (объект последовательность карт). Если достоинство карты 1-го игрока оказывается больше 
достоинства карты 2-го игрока, то вся последовательность карт стола помещается в конец 
последовательности карт 1-го игрока. Если же достоинство карты 2-го игрока оказывается больше 
или равно достоинству карты 1-го игрока, то вся последовательность карт стола помещается в 
конец последовательности карт 2-го игрока. После добавления последовательности карт стола в 
конец последовательности карт игрока, она становится пустой. Во время каждого раунда 
необходимо выводить на экран исходное состояние последовательностей карт игроков, 
последовательность карт стола, и состояние последовательностей карт игроков после 
присоединения последовательности карт стола. Используйте для хранения колоды и 
последовательностей карт игроков и стола только один массив из 36 элементов.*/


package game;

public class Main {

	public static void main(String[] args) 
	{
		Deck deck = new Deck();	// создание колоды
		deck.print(); // вывод колоды на экран
		deck.mixing(); // перемешивание колоды
		deck.print(); // вывод колоды на экран
		
		CardSequence frst_player = new CardSequence(deck); // создание последовательности карт первого игрока
		CardSequence scnd_player = new CardSequence(deck); // создание последовательности карт второго игрока
		deck.razdacha(frst_player, scnd_player); // раздача карт из колоды игрока
		
		CardSequence table = new CardSequence(deck); // создание последовательности карт стола
		
		int c = 3;
		rounds(frst_player, scnd_player, table, c);
	}
	
	// проведение игры
	// передаются последовательности карт игроков, последовательность стола, количество раундов
	public static void rounds(CardSequence frst_player, CardSequence scnd_player, CardSequence table, int count)
	{
		Card card1,card2;
		while (count!=0)
		{
			System.out.println();
			System.out.println("new round");
			frst_player.print(); // вывод последовательности карт первого игрока
			scnd_player.print(); // вывод последовательности карт второго игрока
			card1 = frst_player.drop(); // сброс карты первого игрока
			card2 = scnd_player.drop(); // сброс карты второго игрока
			table.addCard(card1); // формирование стола
			table.addCard(card2);
			if (table.prov(card1)) // сравнение карт стола и добавление их последовательности в конец последовательности одного из игроков
				frst_player.add(table);
			else
				scnd_player.add(table);
			System.out.println();
			frst_player.print(); // вывод последовательности карт первого игрока
			scnd_player.print(); // вывод последовательности карт второго игрока
			count -= 1;
		}
	}
}
